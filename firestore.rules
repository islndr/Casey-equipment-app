rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ðŸ”¹ USERS Collection
    match /users/{userId} {
      // âœ… Allow read access to everyone (to support login before auth)
      allow read: if true;

      // âœ… Only allow create if the requester is an authenticated admin
      allow create: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";

      // âœ… Only allow update/delete by authenticated admins
      allow update, delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    // ðŸ”¹ SPEC SHEETS
    match /specSheets/{specSheetId} {
      allow read: if true;
      allow write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['editor', 'admin'];

      match /rows/{rowId} {
        allow read: if true;
        allow write, delete: if request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['editor', 'admin'];
      }

      match /columns/{columnId} {
        allow read: if true;
        allow write, delete: if request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['editor', 'admin'];
      }
    }

    // ðŸ”¹ TABS
    match /tabs/{tabId} {
      allow read: if true;
      allow write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['editor', 'admin'];
    }

    // ðŸ”¹ PDFs
    match /pdfs/{pdfId} {
      allow read: if true;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ["editor", "admin"];
    }

    // ðŸ”¹ CONTACTS
    match /contacts/{contactId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ["admin", "editor"];
    }
  }
}